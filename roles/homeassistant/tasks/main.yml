---
- block:

  - name: install homeassistant dependencies
    ansible.builtin.apt:
      name:
        - autoconf
        - build-essential
        - libffi-dev
        - libopenjp2-7
        - libssl-dev
        - libtiff5
        - python3
        - python3-dev
        - python3-pip
        - virtualenv
      update_cache: true
      cache_valid_time: 3600

  - name: ensure homeassistant group exits
    ansible.builtin.group:
      name: homeassistant
      system: true

  - name: ensure homeassistant user exists and has restrictive settings
    ansible.builtin.user:
      name: homeassistant
      groups: homeassistant
      password: "*"
      home: "{{ homeassistant_dir }}"
      system: true
      shell: /usr/sbin/nologin

  - name: get available groups
    ansible.builtin.getent:
      database: group

  - name: ensure that {{ homeassistant_config_dir }} exists
    ansible.builtin.file:
      path: "{{ homeassistant_config_dir }}"
      state: directory
      owner: homeassistant
      group: root
      mode: "0750"

  - name: add homeassistant user to ssl-cert group
    ansible.builtin.user:
      name: homeassistant
      groups: ssl-cert
      append: true
    become: true
    when:
      - homeassistant_add_to_ssl_cert_group and "ssl-cert" in ansible_facts.getent_group

  - name: add homeassistant user to dialout, gpio and i2c groups
    ansible.builtin.user:
      name: homeassistant
      groups: dialout,gpio,i2c
      append: true
    when: is_a_raspberrypi

  - name: install wheel and homeassistant inside a virtualenv
    ansible.builtin.pip:
      name:
        - wheel
        - homeassistant=={{ homeassistant_version }}
      virtualenv: "{{ homeassistant_dir }}"

  - name: ensure homeassistant owns "{{ homeassistant_dir }}"
    ansible.builtin.file:
      path: "{{ homeassistant_dir }}"
      state: directory
      recurse: true
      owner: homeassistant
      group: homeassistant

  - name: install homeassistant systemd unit file
    ansible.builtin.template:
      src: etc/systemd/system/homeassistant.service.j2
      dest: /etc/systemd/system/homeassistant.service
    notify:
      - systemctl daemon-reload

  - name: ensure homeassistant is enabled and started
    ansible.builtin.systemd:
      name: homeassistant
      state: started
      enabled: true

  - name: Wait for port 8123
    ansible.builtin.wait_for:
      port: 8123
      delay: 10

  become: "{{ homeassistant_become }}"
  become_user: "{{ homeassistant_become_user }}"

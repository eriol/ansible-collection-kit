---
- name: Deploy AdGuardHome.
  become: "{{ adguardhome_become }}"
  become_user: "{{ adguardhome_become_user }}"
  block:

  - name: Ensure adguardhome group exits
    ansible.builtin.group:
      name: adguardhome
      system: true

  - name: Ensure adguardhome user exists and has restrictive settings
    ansible.builtin.user:
      name: adguardhome
      groups: adguardhome
      password: "*"
      create_home: false
      system: true
      shell: /usr/sbin/nologin

  - name: Get available groups
    ansible.builtin.getent:
      database: group

  - name: Add adguardhome user to ssl-cert group
    ansible.builtin.user:
      name: adguardhome
      groups: ssl-cert
      append: true
    when: adguardhome_add_to_ssl_cert_group and "ssl-cert" in ansible_facts.getent_group

  - name: Ensure that the directory where we deploy AdGuard Home exists
    ansible.builtin.file:
      path: "{{ adguardhome_dir }}"
      state: directory
      owner: adguardhome
      group: adguardhome
      mode: "0750"

  # TODO: download only if not installed or a new version.

  - name: Download locally AdGuard Home in /tmp
    ansible.builtin.get_url:
      url: "{{ adguardhome_download_url }}"
      dest: /tmp
      checksum: "sha256:{{ adguardhome_tarball_sha256 }}"
    delegate_to: localhost
    become: false

  - name: Unarchive locally AdGuard Home
    ansible.builtin.unarchive:
      src: "/tmp/{{ adguardhome_tarball }}"
      dest: /tmp
      remote_src: true
    delegate_to: localhost
    become: false

  - name: Copy AdGuard Home binary
    ansible.builtin.copy:
      src: /tmp/AdGuardHome/AdGuardHome
      dest: "{{ adguardhome_dir }}"
      owner: adguardhome
      group: adguardhome
      mode: "0750"
    notify: systemctl restart adguardhome

  - name: Check if the AdGuardHome.yaml configuration exists
    ansible.builtin.stat:
      path: "{{ adguardhome_dir }}/AdGuardHome.yaml"
    register: adguardhome_yaml_config

  # NOTE: python3-passlib must be installed or this will fail silently.
  - name: Set the AdGuardHome config file
    ansible.builtin.template:
      src: templates/AdGuardHome.yaml.j2
      dest: "{{ adguardhome_dir }}/AdGuardHome.yaml"
      owner: adguardhome
      group: adguardhome
      mode: 0640
    when: not adguardhome_yaml_config.stat.exists
    notify: systemctl restart adguardhome

  - name: Set cap_net_bind_service=+ep on AdGuardHome binary
    ansible.builtin.capabilities:
      path: "{{ adguardhome_dir }}/AdGuardHome"
      capability: cap_net_bind_service=+ep

  - name: Install adguardhome systemd unit file
    ansible.builtin.template:
      src: etc/systemd/system/adguardhome.service.j2
      dest: /etc/systemd/system/adguardhome.service
    notify:
      - systemctl daemon-reload

  - name: Systemctl enable adguardhome
    ansible.builtin.systemd:
      name: adguardhome
      enabled: true

  - name: Ensure AdGuard Home is running
    ansible.builtin.systemd:
      name: adguardhome
      state: started
